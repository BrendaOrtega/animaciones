datasource db {
  url      = env("DATABASE_URL")
  provider = "mongodb"
}

generator client {
  provider = "prisma-client-js"
}

model Module {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int?     @map("__v")

  title String
  slug  String?

  Course Course? @relation(fields: [course], references: [id])
  course String? @db.ObjectId

  Video Video[]
}

model Video {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  id String @id @default(auto()) @map("_id") @db.ObjectId
  v  Int?   @map("__v")

  index  Int?
  title  String?
  poster String?
  type   String?

  authorName  String? @default("blissmo")
  photoUrl    String?
  description String?
  slug        String  @unique
  storageLink String?
  isPublic    Boolean @default(false)
  duration    String?

  moduleName String?
  module     String?  @db.ObjectId
  Module     Module?  @relation(fields: [module], references: [id])
  // moduleId String? @db.ObjectId
  // Module    Module?  @relation(fields: [module], references: [id])
  // experiment aug 2023
  courses    Course[] @relation(fields: [courseIds], references: [id])
  courseIds  String[] @db.ObjectId

  @@map("videos")
}

model Course {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  v                 Int?      @map("__v")
  summary           String?
  authorAt          String?
  authorDescription String?
  authorName        String?
  authorSocial      String?
  banner            String?
  basePrice         Int
  classTime         String?
  createdAt         DateTime  @db.Date
  description       String?
  duration          String?
  icon              String?
  isFree            Boolean
  isLive            Boolean
  level             String?
  logos             String?
  meta              String?
  offer             String?   @db.ObjectId
  photoUrl          String?
  poster            String?
  published         Boolean?
  slug              String    @unique
  startDate         DateTime? @db.Date
  stripeCoupon      String?
  stripeId          String?
  tipo              String?
  title             String
  tool              String?
  trailer           String?
  updatedAt         DateTime  @updatedAt
  version           String?
  theme             Json?
  // sep 2023 Will be used on Nov 2024
  module            Json?
  Modules           Module[]
  modules           String[]  @db.ObjectId
  // relations aug 2023
  Users             User[]    @relation(fields: [userIds], references: [id])
  userIds           String[]  @db.ObjectId
  //
  videos            Video[]   @relation(fields: [videoIds], references: [id])
  videoIds          String[]  @db.ObjectId

  @@map("courses")
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  v           Int?     @map("__v")
  accessToken String?
  /// Multiple data types found: Array(String (ObjectId)): 98.7%, Array(Unknown): 1.3% out of 864 sampled entries
  bootcamps   Json?
  changePass  Boolean?
  confirmed   Boolean?
  /// Multiple data types found: Array(String): 5.3%, Array(String (ObjectId)): 94.7% out of 334 sampled entries
  courses     String[] @db.ObjectId
  Courses     Course[] @relation(fields: [courses], references: [id])
  displayName String?
  editions    String[] @db.ObjectId
  email       String   @unique
  /// Could not determine type: the field only had null or empty values in the sample set.
  enrolled    Json?
  exams       Json?
  facebookId  String?
  googleId    String?
  hash        String?
  homeworks   Json?
  mentoring   Json?
  /// Could not determine type: the field only had null or empty values in the sample set.
  models      Json?
  /// Could not determine type: the field only had null or empty values in the sample set.
  modules     Json?
  /// Could not determine type: the field only had null or empty values in the sample set.
  payments    Json?
  phoneNumber String?
  photoURL    String?
  providerId  String?
  role        String?  @default("GUEST")
  roles       String[]
  salt        String?
  uid         String?
  username    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  /// Could not determine type: the field only had null or empty values in the sample set.
  videos      Json?

  @@map("users")
}
